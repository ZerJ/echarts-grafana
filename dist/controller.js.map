{"version":3,"sources":["../src/controller.js"],"names":["MetricsPanelCtrl","_","kbn","rendering","Controller","$scope","$injector","$rootScope","optionDefaults","type","legend","show","values","links","datasource","maxDataPoints","interval","targets","cacheTimeout","nullPointMode","legendType","aliasColors","format","valueName","strokeWidth","fontSize","thresholds","unitSingle","unitPlural","esMetric","defaults","panel","events","on","onRender","bind","onDataReceived","onDataError","onInitEditMode","dataList","data","name","value","dname","rows","forEach","push","render","addEditorTab","unitFormats","getUnitFormats","scope","elem","attrs","ctrl","templateUrl"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACQA,sB,kBAAAA,gB;;AACDC,O;;AACAC,S;;AACAC,e;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4BAGMC,U;;;AACX,4BAAYC,MAAZ,EAAoBC,SAApB,EAA+BC,UAA/B,EAA2C;AAAA;;AAAA,8HACnCF,MADmC,EAC3BC,SAD2B;;AAEzC,gBAAKC,UAAL,GAAkBA,UAAlB;;AAEA,cAAMC,iBAAiB;AACrBC,kBAAM,KADe;AAErBC,oBAAQ;AACNC,oBAAM,IADA;AAENC,sBAAQ;AAFF,aAFa;AAMrBC,mBAAO,EANc;AAOrBC,wBAAY,IAPS;AAQrBC,2BAAe,CARM;AASrBC,sBAAU,IATW;AAUrBC,qBAAS,CAAC,EAAD,CAVY;AAWrBC,0BAAc,IAXO;AAYrBC,2BAAe,WAZM;AAarBC,wBAAY,aAbS;AAcrBC,yBAAa,EAdQ;AAerBC,oBAAQ,OAfa;AAgBrBC,uBAAW,SAhBU;AAiBrBC,yBAAa,CAjBQ;AAkBrBC,sBAAU,KAlBW;AAmBrBC,wBAAY,OAnBS;AAoBrBC,wBAAY,EApBS;AAqBrBC,wBAAY,EArBS;AAsBrBC,sBAAU;AAtBW,WAAvB;;AAyBA5B,YAAE6B,QAAF,CAAW,MAAKC,KAAhB,EAAuBvB,cAAvB;AACAP,YAAE6B,QAAF,CAAW,MAAKC,KAAL,CAAWrB,MAAtB,EAA8BF,eAAeE,MAA7C;;AAEA,gBAAKsB,MAAL,CAAYC,EAAZ,CAAe,QAAf,EAAyB,MAAKC,QAAL,CAAcC,IAAd,OAAzB;AACA,gBAAKH,MAAL,CAAYC,EAAZ,CAAe,eAAf,EAAgC,MAAKG,cAAL,CAAoBD,IAApB,OAAhC;AACA,gBAAKH,MAAL,CAAYC,EAAZ,CAAe,YAAf,EAA6B,MAAKI,WAAL,CAAiBF,IAAjB,OAA7B;AACA,gBAAKH,MAAL,CAAYC,EAAZ,CAAe,oBAAf,EAAqC,MAAKG,cAAL,CAAoBD,IAApB,OAArC;AACA,gBAAKH,MAAL,CAAYC,EAAZ,CAAe,gBAAf,EAAiC,MAAKK,cAAL,CAAoBH,IAApB,OAAjC;AApCyC;AAqC1C;;;;qCAEU,CACV;;;yCAEcI,Q,EAAU;AAAA;;AAAA,2CACRA,QADQ;AAAA,gBAChBC,IADgB;;AAEvB,iBAAKC,IAAL,GAAY,EAAZ;AACA,iBAAKC,KAAL,GAAa,EAAb;AACA,iBAAKC,KAAL,GAAa,EAAb;AACA,gBAAIH,IAAJ,EAAU;AACRA,mBAAKI,IAAL,CAAUC,OAAV,CAAkB,gBAAyB;AAAA;AAAA,oBAAvBJ,IAAuB;AAAA,oBAAjBC,KAAiB;AAAA,oBAAXC,KAAW;;AACzC,uBAAKF,IAAL,CAAUK,IAAV,CAAeL,IAAf;AACA,uBAAKC,KAAL,CAAWI,IAAX,CAAgBJ,KAAhB;AACA,uBAAKC,KAAL,CAAWG,IAAX,CAAgBH,KAAhB;AACD,eAJD;AAKD;AACD,iBAAKI,MAAL;AACD;;;wCAEa;AACZ,iBAAKA,MAAL;AACD;;;2CAEgB;AACf,iBAAKC,YAAL,CAAkB,MAAlB,EAA0B,4DAA1B,EAAwF,CAAxF;AACA,iBAAKC,WAAL,GAAmB/C,IAAIgD,cAAJ,EAAnB;AACD;;;+BAEIC,K,EAAOC,I,EAAMC,K,EAAOC,I,EAAM;AAC7BnD,sBAAUgD,KAAV,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,IAA9B;AACD;;;;QArE6BtD,gB;;;;AAyEhCI,iBAAWmD,WAAX,GAAyB,wBAAzB","file":"controller.js","sourcesContent":["/* jshint esversion: 6 */\r\nimport {MetricsPanelCtrl} from 'app/plugins/sdk';\r\nimport _ from 'lodash';\r\nimport kbn from 'app/core/utils/kbn';\r\nimport rendering from './rendering'\r\n\r\n\r\nexport class Controller extends MetricsPanelCtrl {\r\n  constructor($scope, $injector, $rootScope) {\r\n    super($scope, $injector);\r\n    this.$rootScope = $rootScope;\r\n\r\n    const optionDefaults = {\r\n      type: 'map',\r\n      legend: {\r\n        show: true,\r\n        values: true\r\n      },\r\n      links: [],\r\n      datasource: null,\r\n      maxDataPoints: 3,\r\n      interval: null,\r\n      targets: [{}],\r\n      cacheTimeout: null,\r\n      nullPointMode: 'connected',\r\n      legendType: 'Under graph',\r\n      aliasColors: {},\r\n      format: 'short',\r\n      valueName: 'current',\r\n      strokeWidth: 1,\r\n      fontSize: '80%',\r\n      thresholds: '0,200',\r\n      unitSingle: '',\r\n      unitPlural: '',\r\n      esMetric: 'Count',\r\n    };\r\n\r\n    _.defaults(this.panel, optionDefaults);\r\n    _.defaults(this.panel.legend, optionDefaults.legend);\r\n\r\n    this.events.on('render', this.onRender.bind(this));\r\n    this.events.on('data-received', this.onDataReceived.bind(this));\r\n    this.events.on('data-error', this.onDataError.bind(this));\r\n    this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\r\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\r\n  }\r\n\r\n  onRender() {\r\n  }\r\n\r\n  onDataReceived(dataList) {\r\n    const [data] = dataList;\r\n    this.name = [];\r\n    this.value = [];\r\n    this.dname = [];\r\n    if (data) {\r\n      data.rows.forEach(([name, value,dname]) => {\r\n        this.name.push(name);\r\n        this.value.push(value);\r\n        this.dname.push(dname);\r\n      });\r\n    }\r\n    this.render();\r\n  }\r\n\r\n  onDataError() {\r\n    this.render();\r\n  }\r\n\r\n  onInitEditMode() {\r\n    this.addEditorTab('图表选项', 'public/plugins/echarts-grafana/partials/module.editor.html', 2);\r\n    this.unitFormats = kbn.getUnitFormats();\r\n  }\r\n\r\n  link(scope, elem, attrs, ctrl) {\r\n    rendering(scope, elem, attrs, ctrl);\r\n  }\r\n\r\n}\r\n\r\nController.templateUrl = './partials/module.html';\r\n"]}