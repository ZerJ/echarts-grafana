{"version":3,"sources":["../src/rendering.js"],"names":["link","scope","elem","attrs","ctrl","$panelContainer","find","refreshed","oncontextmenu","myChart","echarts","init","setHeight","panel","height","_","isString","parseInt","replace","style","mapStack","parentId","parentName","count","location","setTimeout","resize","getData","chartType","name","value","dname","data","i","length","push","forname","key","nameMap","geoCoordMap","datas","features","nation","index","undefined","parseFloat","result","forJson","dataFormatter","area","cityId","flag","f","mapId","mapName","mapData","console","log","render","convertData","item","res","fromCoord","toCoord","coord","scatterData","dataformate","cityData","series","chartSerilaName","type","coordinateSystem","symbolSize","label","normal","show","emphasis","itemStyle","borderColor","borderWidth","center","chartName","serialName","chartMin","min","chartMax","max","window","$","getJSON","Json","registerMap","option","title","text","left","textStyle","color","fontSize","backgroundColor","tooltip","trigger","padding","formatter","params","toLocaleString","legend","orient","visualMap","calculable","inRange","mapType","hoverable","roam","showLegendSymbol","areaColor","setOption","off","on","parms","cityID","CityMap","ChangeMap","geo","map","then","planePath","colors","forEach","zlevel","effect","period","trailLength","lineStyle","width","curveness","symbol","opacity","rippleEffect","brushType","position","regions","selected","onmouseup","oEvent","event","button","backMap","list","pop","p","j","geometry","coordinates","properties","cp","Math","abs","encodeOffsets","k","decodeData","decodePolygon","rayCasting","coordinate","prevX","prevY","x","charCodeAt","y","checkPoint","polygonPoints","counter","xinters","p1","p2","pointCount","events","renderingCompleted"],"mappings":"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","sourcesContent":["import echarts from './libs/echarts.min';\r\nimport _ from \"lodash\";\r\nimport './libs/geocoord';\r\nexport default function link(scope, elem, attrs, ctrl) {\r\n  const $panelContainer = elem.find('.echarts-grafana')[0];\r\n  ctrl.refreshed = true;\r\n  $panelContainer.oncontextmenu = function () { return false; };\r\n  let myChart = echarts.init($panelContainer, 'dark');\r\n  function setHeight() {\r\n    let panel=ctrl.panel;\r\n    let height = ctrl.height || panel.height;\r\n    if (_.isString(height)) {\r\n      height = parseInt(height.replace('px', ''), 10);\r\n    }\r\n    $panelContainer.style.height = height + 'px';\r\n  }\r\n  var mapStack = [];\r\n  var parentId = null;\r\n  var parentName = null;\r\n  var count =null;\r\n  var location =[];\r\n  setHeight();\r\n  setTimeout(function () {\r\n    myChart.resize();\r\n  }, 3000);\r\n  // function dataFormatter() {\r\n  //   const {name, value} = ctrl;\r\n  //   let wdata =[];\r\n  //   let ndata =[];\r\n  //   let pdata =[];\r\n  //   let sdata =[];\r\n  //   for (let k in name){\r\n  //     if(count===0){\r\n  //       for(let nation in nameMap) {\r\n  //         if( nameMap[nation] === name[k].split(',')[0]){\r\n  //           wdata.push({name:nation,value:value[k]});\r\n  //         }\r\n  //       }\r\n  //     }\r\n  //     if(count===1&&name[k].split(',')[1]!==undefined){\r\n  //       if(name[k].split(',')[1].indexOf(\"省\") !== -1){\r\n  //         let province = name[k].split(',')[1].split(\"省\")[0]\r\n  //         ndata.push({name:province,value:value[k]})\r\n  //       }else {\r\n  //         ndata.push({name:name[k].split(',')[1],value:value[k]})\r\n  //       }\r\n  //     }\r\n  //     if(count===2&&name[k].split(',')[2]!==undefined){\r\n  //       pdata.push({name:name[k].split(',')[2],value:value[k]})\r\n  //     }\r\n  //     if(count===3&&name[k].split(',')[3]!==undefined){\r\n  //       sdata.push({name:name[k].split(',')[3],value:value[k]})\r\n  //     }\r\n  //   }\r\n  //   switch (count) {\r\n  //     case 0:\r\n  //       return wdata;\r\n  //     case 1:\r\n  //       return ndata;\r\n  //     case 2:\r\n  //       return pdata;\r\n  //     case 3:\r\n  //       return sdata;\r\n  //   }\r\n  // }\r\n  function getData(chartType) {\r\n    const {name, value,dname} = ctrl;\r\n    let data =[];\r\n    if (name){\r\n      switch (chartType) {\r\n        case 'ChinaMap':\r\n          for (let i = 0; i < name.length; i++) {\r\n            data.push({name: name[i], value: value[i]});\r\n          }\r\n          return data;\r\n        case 'WorldMap':\r\n          let forname;\r\n          for(let key in nameMap) {\r\n            for (let i=0;i<name.length;i++){\r\n              if( nameMap[key] === name[i]){\r\n                forname = key;\r\n                data.push({name:forname,value:value[i]});\r\n              }\r\n            }\r\n          }\r\n          return data;\r\n        case 'ChinaGeo':\r\n          for(let i in name){\r\n            if(geoCoordMap[name[i]].length<=2){\r\n              geoCoordMap[name[i]].push(parseInt(value[i]))\r\n            }\r\n            data.push({name:name[i], value:geoCoordMap[name[i]]})\r\n          }\r\n          data.push({name:\"zzxas\", value:[101.593,24.8642]})\r\n          return data;\r\n        case 'WorldGeo':\r\n          for(let i in name){\r\n            if (typeof (geoCoordMap[name[i]])!==\"undefined\"){\r\n              if(geoCoordMap[name[i]].length<=2){\r\n                geoCoordMap[name[i]].push(parseInt(value[i]))\r\n              }\r\n              data.push({name:name[i], value:geoCoordMap[name[i]]});\r\n            }\r\n          }\r\n          return data;\r\n        case 'ChinaFlow':\r\n          for (let i = 0; i < name.length; i++) {\r\n            data.push({name: name[i], value: value[i],dname:dname[i]});\r\n          }\r\n          return data;\r\n        case 'WorldFlow':\r\n          for (let i = 0; i < name.length; i++) {\r\n            data.push({name: name[i], value: value[i],dname:dname[i]});\r\n          }\r\n          return data;\r\n      }\r\n    }\r\n\r\n  }\r\n  function datas(features) {\r\n    const {name, value, dname,nation} = ctrl;\r\n    let data =[];\r\n    let index=[];\r\n    for(let i in nation ){\r\n      if(nation[i]!==undefined&&nation[i]!==null){\r\n        for(let key in nameMap){\r\n          if(nameMap[key] === nation[i]){\r\n            location.push([key,parseFloat(value[i]),parseFloat(name[i]),dname[i]])\r\n            data.push({name:key,value:dname[i]})\r\n          }\r\n        }\r\n      }else {\r\n        let result =forJson([parseFloat(value[i]),parseFloat(name[i])],features)\r\n        location.push([result,parseFloat(value[i]),parseFloat(name[i]),dname[i]])\r\n        data.push({name:result,value:dname[i]})\r\n      }\r\n    }\r\n    return data\r\n  }\r\n  function dataFormatter(area,datas,features,cityId,name,flag,f) {\r\n      if(flag){\r\n        mapStack.push({\r\n          mapId: parentId,\r\n          mapName: parentName,\r\n          mapData: datas\r\n        });\r\n        parentId = cityId;\r\n        parentName = name;\r\n      }\r\n      location=[];\r\n      let data =[];\r\n      console.log(count)\r\n      if(count===0){\r\n        for (let i in datas) {\r\n          data.push({name: datas[i][0], value: datas[i][3]});\r\n          location.push([datas[i][0], datas[i][1], datas[i][2], datas[i][3]])\r\n        }\r\n      }else {\r\n        for (let i in datas){\r\n          if (datas[i][0]===area&&f){\r\n            let result =forJson([datas[i][1],datas[i][2]],features)\r\n            data.push({name:result,value:datas[i][3]});\r\n            location.push([result,datas[i][1],datas[i][2],datas[i][3]])\r\n          }else if (!f) {\r\n            let result =forJson([datas[i][1],datas[i][2]],features)\r\n            data.push({name:result,value:datas[i][3]});\r\n            location.push([result,datas[i][1],datas[i][2],datas[i][3]])\r\n          }\r\n        }\r\n      }\r\n      return data\r\n  }\r\n  function render() {\r\n\r\n    if (!myChart) {\r\n      return;\r\n    }\r\n    myChart.resize();\r\n    setHeight();\r\n    if (ctrl.refreshed) {\r\n      let convertData = function(item) {\r\n        let res = [];\r\n        let fromCoord = geoCoordMap[item.name];\r\n        let toCoord = geoCoordMap[item.dname];\r\n        if(fromCoord && toCoord) {\r\n          res.push([{\r\n            coord: fromCoord // 起点坐标\r\n          }, {\r\n            coord: toCoord // 终点坐标\r\n          }])\r\n        }\r\n        return res;\r\n      };\r\n      let scatterData=function(item){\r\n        let dataformate =[];\r\n        dataformate.push({name:item.dname,value:geoCoordMap[item.dname]});\r\n        return dataformate\r\n      };\r\n      let cityData=function(item) {\r\n        let dataformate =[];\r\n        if (geoCoordMap[item.name].length<=2){\r\n          geoCoordMap[item.name].push(parseInt(item.value));\r\n        }\r\n        dataformate.push({name:item.name,value:geoCoordMap[item.name]});\r\n        return dataformate\r\n      };\r\n      let series= [\r\n        {\r\n          name: chartSerilaName,\r\n          type: 'effectScatter',\r\n          coordinateSystem: 'geo',\r\n          symbolSize: 12,\r\n          label: {\r\n            normal: {\r\n              show: false\r\n            },\r\n            emphasis: {\r\n              show: false\r\n            }\r\n          },\r\n          itemStyle: {\r\n            emphasis: {\r\n              borderColor: '#fff',\r\n              borderWidth: 1\r\n            }\r\n          },\r\n          center: [-6.6796875,32.84267363195431],\r\n        }];\r\n      myChart.resize();\r\n      let chartName = ctrl.panel.chartName;\r\n      let chartType = ctrl.panel.chartType;\r\n      let chartSerilaName = ctrl.panel.serialName;\r\n      if(!chartSerilaName){\r\n        chartSerilaName=\"\"\r\n      }\r\n      let chartMin = ctrl.panel.min;\r\n      let chartMax = ctrl.panel.max;\r\n      if (!chartMin || !chartMax){\r\n        chartMin=1;\r\n        chartMax=100;\r\n      }\r\n\r\n      if (chartType === 'ChinaMap') {\r\n        parentId='100000';\r\n        parentName='china';\r\n        count=1;\r\n        // let data = getData(chartType);\r\n        window.$.getJSON('public/plugins/echarts-grafana/data/100000.json',function(Json){\r\n          echarts.registerMap('china', Json);\r\n          let data =datas(Json.features);\r\n          const option = {\r\n            title: {\r\n              text: chartName,\r\n              left: 'center',\r\n              textStyle: {color: '#ffffff', fontSize: 12}\r\n            },\r\n            backgroundColor: '#404a59',\r\n            tooltip: {\r\n              trigger: 'item',\r\n              padding: 10,\r\n              formatter: function (params) {\r\n                let nation =null\r\n                for(let key in nameMap){\r\n                  if(params.name===key){\r\n                    nation =nameMap[key]\r\n                  }\r\n                }\r\n                if (nation&&params.value){\r\n                  return nation + ' : ' + parseInt(params.value).toLocaleString();\r\n                }else if(nation){\r\n                  return nation + ' : ';\r\n                }else if(params.value){\r\n                  return params.name+':'+parseInt(params.value).toLocaleString();\r\n                }else {\r\n                  return params.name+':'\r\n                }\r\n              },\r\n              backgroundColor: 'rgba(20,20,20,0.8)',\r\n            },\r\n            legend: {\r\n              orient: 'vertical',\r\n              left: 'left'\r\n            },\r\n            visualMap: {\r\n              min: chartMin,\r\n              max: chartMax,\r\n              calculable: true,\r\n              inRange: {\r\n                color: ['#50a3ba', '#eac736', '#d94e5d']\r\n              },\r\n              textStyle: {\r\n                color: '#fff'\r\n              }\r\n            },\r\n            series: [\r\n              {\r\n                name: chartSerilaName,\r\n                type: 'map',\r\n                mapType: 'china',\r\n                hoverable: true,\r\n                roam: true,\r\n                showLegendSymbol: false,\r\n                label: {\r\n                  normal: {\r\n                    show: false\r\n                  },\r\n                  emphasis: {\r\n                    show: false\r\n                  }\r\n                },\r\n                itemStyle: {\r\n                  normal: {label: {show: true}, areaColor: '#edf2f1'},\r\n                  emphasis: {label: {show: true}, areaColor: '#ffeb59'}\r\n                },\r\n                data: data\r\n              }\r\n            ]\r\n          };\r\n          myChart.setOption(option);\r\n        });\r\n        myChart.off(\"click\");\r\n        myChart.on(\"click\",function (parms) {\r\n          mapStack.push({\r\n            mapId: parentId,\r\n            mapName:parentName,\r\n            mapData:location\r\n          });\r\n          var cityID =CityMap[parms.name];\r\n          parentId = cityID;\r\n          parentName = parms.name;\r\n          if(cityID){\r\n            count=count+1;\r\n            ChangeMap(cityID,parms.name,chartType,chartMin,chartMax,chartName,chartSerilaName,false,true);\r\n          }\r\n        });\r\n      }\r\n\r\n      if (chartType === 'ChinaGeo') {\r\n        let data = getData(chartType);\r\n        const option = {\r\n          title: {\r\n            text: chartName,\r\n            left: 'center',\r\n            textStyle: {color: '#ffffff', fontSize: 12}\r\n          },\r\n          backgroundColor: '#404a59',\r\n          tooltip: {\r\n            trigger: 'item',\r\n            formatter: function (params) {\r\n              return params.name + ' : ' + params.value[2];\r\n            },\r\n            padding: 10,\r\n            backgroundColor: 'rgba(20,20,20,0.8)',\r\n          },\r\n          legend: {\r\n            orient: 'vertical',\r\n            left: 'left'\r\n          },\r\n          visualMap: {\r\n            min: chartMin,\r\n            max: chartMax,\r\n            calculable: true,\r\n            inRange: {\r\n              color: ['#50a3ba', '#eac736', '#d94e5d']\r\n            },\r\n            textStyle: {\r\n              color: '#fff'\r\n            }\r\n          },\r\n          geo: {\r\n            map: 'china',\r\n            roam:true,\r\n            label: {\r\n              emphasis: {\r\n                show: false\r\n              }\r\n            },\r\n            itemStyle: {\r\n              normal: {\r\n                areaColor: '#323c48',\r\n                borderColor: '#111'\r\n              },\r\n              emphasis: {\r\n                areaColor: '#2a333d'\r\n              }\r\n            }\r\n          },\r\n\r\n          series: [\r\n            {\r\n              name: chartSerilaName,\r\n              type: 'effectScatter',\r\n              coordinateSystem: 'geo',\r\n              symbolSize: 12,\r\n              label: {\r\n                normal: {\r\n                  show: false\r\n                },\r\n                emphasis: {\r\n                  show: false\r\n                }\r\n              },\r\n              itemStyle: {\r\n                emphasis: {\r\n                  borderColor: '#fff',\r\n                  borderWidth: 1\r\n                }\r\n              },\r\n              data: data\r\n            }\r\n          ]\r\n        };\r\n        window.$.getJSON('public/plugins/echarts-grafana/data/china.json',function(Json){\r\n          echarts.registerMap('china', Json);\r\n          myChart.setOption(option);\r\n        });\r\n      }\r\n\r\n      if (chartType === 'WorldMap') {\r\n        parentId = '000001';\r\n        parentName = 'world';\r\n        count=0;\r\n        $.getJSON('public/plugins/echarts-grafana/data/'+parentId+'.json').then((Json) => {\r\n          echarts.registerMap('world', Json);\r\n          let data =datas(Json.features);\r\n          const option = {\r\n            title: {\r\n              text: chartName,\r\n              left: 'center',\r\n              textStyle: {color: '#ffffff', fontSize: 12}\r\n            },\r\n            backgroundColor: '#404a59',\r\n            tooltip: {\r\n              trigger: 'item',\r\n              padding: 10,\r\n              formatter: function (params) {\r\n                let nation =null\r\n                for(let key in nameMap){\r\n                  if(params.name===key){\r\n                    nation =nameMap[key]\r\n                  }\r\n                }\r\n                if (nation&&params.value){\r\n                  return nation + ' : ' + parseInt(params.value).toLocaleString();\r\n                }else if(nation){\r\n                  return nation + ' : ';\r\n                }else if(params.value){\r\n                  return params.name+':'+parseInt(params.value).toLocaleString();\r\n                }else {\r\n                  return params.name+':'\r\n                }\r\n              },\r\n              backgroundColor: 'rgba(20,20,20,0.8)',\r\n            },\r\n            legend: {\r\n              orient: 'vertical',\r\n              left: 'left'\r\n            },\r\n            visualMap: {\r\n              min: chartMin,\r\n              max: chartMax,\r\n              calculable: true,\r\n              inRange: {\r\n                color: ['#50a3ba', '#eac736', '#d94e5d']\r\n              },\r\n              textStyle: {\r\n                color: '#fff'\r\n              }\r\n            },\r\n            series: [\r\n              {\r\n                name: chartSerilaName,\r\n                type: 'map',\r\n                mapType: 'world',\r\n                hoverable: true,\r\n                roam: true,\r\n                showLegendSymbol: false,\r\n                label: {\r\n                  normal: {\r\n                    show: false\r\n                  },\r\n                  emphasis: {\r\n                    show: false\r\n                  }\r\n                },\r\n                itemStyle: {\r\n                  normal: {label: {show: true}, areaColor: '#edf2f1'},\r\n                  emphasis: {label: {show: true}, areaColor: '#ffeb59'}\r\n                },\r\n                center: [-6.6796875,32.84267363195431],\r\n                data: data\r\n              }\r\n            ]\r\n          };\r\n          // echarts.dispose(myChart);\r\n          // myChart = echarts.init($panelContainer, 'dark');\r\n          myChart.setOption(option);\r\n        });\r\n        myChart.off(\"click\");\r\n        myChart.on(\"click\",function (parms) {\r\n          mapStack.push({\r\n            mapId: parentId,\r\n            mapName:parentName,\r\n            mapData:location\r\n          });\r\n          var cityID =CityMap[parms.name];\r\n          if(cityID!==undefined){\r\n            parentId = cityID;\r\n            parentName = parms.name;\r\n            if(cityID){\r\n              count=count+1;\r\n              ChangeMap(cityID,parms.name,chartType,chartMin,chartMax,chartName,chartSerilaName,false,true);\r\n            }\r\n          }\r\n          // else {\r\n          //   count=count+1;\r\n          //   changeNation(parms.name,chartType,chartMin,chartMax,chartName,chartSerilaName)\r\n          // }\r\n\r\n        });\r\n      }\r\n\r\n      if (chartType === 'WorldGeo'){\r\n        let data =getData(chartType);\r\n        const option = {\r\n          title: {\r\n            text: chartName,\r\n            left: 'center',\r\n            textStyle: {color: '#ffffff', fontSize: 12}\r\n          },\r\n          backgroundColor: '#404a59',\r\n          tooltip: {\r\n            trigger: 'item',\r\n            formatter: function (params) {\r\n              return params.name + ' : ' + params.value[2];\r\n            },\r\n            padding: 10,\r\n            backgroundColor: 'rgba(20,20,20,0.8)',\r\n          },\r\n          legend: {\r\n            orient: 'vertical',\r\n            left: 'left'\r\n          },\r\n          visualMap: {\r\n            min: chartMin,\r\n            max: chartMax,\r\n            calculable: true,\r\n            inRange: {\r\n              color: ['#50a3ba', '#eac736', '#d94e5d']\r\n            },\r\n            textStyle: {\r\n              color: '#fff'\r\n            }\r\n          },\r\n          geo: {\r\n            map: 'world',\r\n            roam:true,\r\n            label: {\r\n              emphasis: {\r\n                show: false\r\n              }\r\n            },\r\n            itemStyle: {\r\n              normal: {\r\n                areaColor: '#323c48',\r\n                borderColor: '#111'\r\n              },\r\n              emphasis: {\r\n                areaColor: '#2a333d'\r\n              }\r\n            }\r\n          },\r\n\r\n          series: [\r\n            {\r\n              name: chartSerilaName,\r\n              type: 'effectScatter',\r\n              coordinateSystem: 'geo',\r\n              symbolSize: 12,\r\n              label: {\r\n                normal: {\r\n                  show: false\r\n                },\r\n                emphasis: {\r\n                  show: false\r\n                }\r\n              },\r\n              itemStyle: {\r\n                emphasis: {\r\n                  borderColor: '#fff',\r\n                  borderWidth: 1\r\n                }\r\n              },\r\n              center: [-6.6796875,32.84267363195431],\r\n\r\n              data: data\r\n            }\r\n          ]\r\n\r\n        };\r\n        window.$.getJSON('public/plugins/echarts-grafana/data/world.json',function(Json){\r\n          echarts.registerMap('world', Json);\r\n          myChart.setOption(option);\r\n        });\r\n      }\r\n\r\n      if (chartType === 'WorldFlow') {\r\n        let planePath = 'path://M1705.06,1318.313v-89.254l-319.9-221.799l0.073-208.063c0.521-84.662-26.629-121.796-63.961-121.491c-37.332-0.305-64.482,36.829-63.961,121.491l0.073,208.063l-319.9,221.799v89.254l330.343-157.288l12.238,241.308l-134.449,92.931l0.531,42.034l175.125-42.917l175.125,42.917l0.531-42.034l-134.449-92.931l12.238-241.308L1705.06,1318.313z';\r\n        let colors = ['#9ae5fc', '#dcbf71']; // 自定义图中要用到的颜色\r\n        let data = getData(chartType);\r\n        data.forEach(function (item){\r\n          series.push({\r\n              // 白色航线特效图\r\n              type: 'lines',\r\n              zlevel: 1, // 用于分层，z-index的效果\r\n              effect: {\r\n                show: true, // 动效是否显示\r\n                period: 6, // 特效动画时间\r\n                trailLength: 0.7, // 特效尾迹的长度\r\n                color: '#fff', // 特效颜色\r\n                symbolSize: 3 // 特效大小\r\n              },\r\n              lineStyle: {\r\n                normal: { // 正常情况下的线条样式\r\n                  color: colors[0],\r\n                  width: 0, // 因为是叠加效果，要是有宽度，线条会变粗，白色航线特效不明显\r\n                  curveness: -0.2 // 线条曲度\r\n                }\r\n              },\r\n              data: convertData(item) // 特效的起始、终点位置\r\n            }, { // 小飞机航线效果\r\n              type: 'lines',\r\n              zlevel: 2,\r\n              symbol: ['none', 'arrow'], // 用于设置箭头\r\n              symbolSize: 10,\r\n              effect: {\r\n                show: true,\r\n                period: 6,\r\n                trailLength: 0,\r\n                symbol: planePath, // 特效形状，可以用其他svg pathdata路径代替\r\n                symbolSize: 15\r\n              },\r\n              lineStyle: {\r\n                normal: {\r\n                  color: colors[0],\r\n                  width: 1,\r\n                  opacity: 0.6,\r\n                  curveness: -0.2\r\n                }\r\n              },\r\n              data: convertData(item), // 特效的起始、终点位置，一个二维数组，相当于coords: convertData(item[1])\r\n            }, { // 散点效果\r\n            type: 'effectScatter',\r\n            coordinateSystem: 'geo',\r\n            zlevel: 3,\r\n            rippleEffect: {\r\n              brushType: 'stroke'\r\n            },\r\n            label: {\r\n              normal: {\r\n                show: true,\r\n                position: 'left',\r\n                formatter: '{b}'\r\n              }\r\n            },\r\n            itemStyle: {\r\n              normal: {\r\n                color: colors[1]\r\n              }\r\n            },\r\n              data: cityData(item)\r\n            }\r\n\r\n          );\r\n          series.push({\r\n            type: 'effectScatter',\r\n            coordinateSystem: 'geo',\r\n            zlevel: 3,\r\n            rippleEffect: {\r\n              brushType: 'stroke'\r\n            },\r\n            label: {\r\n              normal: {\r\n                show: true,\r\n                position: 'left',\r\n                formatter: '{b}'\r\n              }\r\n            },\r\n            itemStyle: {\r\n              normal: {\r\n                color: colors[1]\r\n              }\r\n            },\r\n            data: scatterData(item)\r\n          })\r\n        });\r\n        const option = {\r\n          title: {\r\n            text: chartName,\r\n            left: 'center',\r\n            textStyle: {color: '#ffffff', fontSize: 12}\r\n          },\r\n          backgroundColor: '#404a59',\r\n          tooltip: {\r\n            trigger: 'item',\r\n            formatter: function (params) {\r\n              if (params.name){\r\n                return params.name\r\n              }else if(params.data.coord) {\r\n                return params.data.coord[2]\r\n              }\r\n            },\r\n            padding: 10,\r\n            backgroundColor: 'rgba(20,20,20,0.8)',\r\n          },\r\n          legend: {\r\n            orient: 'vertical',\r\n            left: 'left'\r\n          },\r\n          visualMap: {\r\n            min: chartMin,\r\n            max: chartMax,\r\n            calculable: true,\r\n            inRange: {\r\n              color: ['#50a3ba', '#eac736', '#d94e5d']\r\n            },\r\n            textStyle: {\r\n              color: '#fff'\r\n            }\r\n          },\r\n          geo: {\r\n            map: 'world',\r\n            roam: true,\r\n            label: {\r\n              emphasis: {\r\n                show: false\r\n              }\r\n            },\r\n            itemStyle: {\r\n              normal: {\r\n                areaColor: '#323c48',\r\n                borderColor: '#111'\r\n              },\r\n              emphasis: {\r\n                areaColor: '#2a333d'\r\n              }\r\n            },\r\n            regions: [{ // 选中的区域\r\n              name: 'China',\r\n              selected: true,\r\n              itemStyle: { // 高亮时候的样式\r\n                emphasis: {\r\n                  areaColor: '#7d7d7d'\r\n                }\r\n              },\r\n              label: { // 高亮的时候不显示标签\r\n                emphasis: {\r\n                  show: false\r\n                }\r\n              }\r\n            }]\r\n          },\r\n          series :series,\r\n        };\r\n        window.$.getJSON('public/plugins/echarts-grafana/data/world.json',function(Json){\r\n          echarts.registerMap('world', Json);\r\n          myChart.setOption(option);\r\n        });\r\n      }\r\n\r\n      if (chartType === 'ChinaFlow') {\r\n        let planePath = 'path://M1705.06,1318.313v-89.254l-319.9-221.799l0.073-208.063c0.521-84.662-26.629-121.796-63.961-121.491c-37.332-0.305-64.482,36.829-63.961,121.491l0.073,208.063l-319.9,221.799v89.254l330.343-157.288l12.238,241.308l-134.449,92.931l0.531,42.034l175.125-42.917l175.125,42.917l0.531-42.034l-134.449-92.931l12.238-241.308L1705.06,1318.313z';\r\n        var color = ['#9ae5fc', '#dcbf71']; // 自定义图中要用到的颜色\r\n        let data=getData(chartType);\r\n        data.forEach(function (item){\r\n          series.push({\r\n              // 白色航线特效图\r\n              type: 'lines',\r\n              zlevel: 1, // 用于分层，z-index的效果\r\n              effect: {\r\n                show: true, // 动效是否显示\r\n                period: 6, // 特效动画时间\r\n                trailLength: 0.7, // 特效尾迹的长度\r\n                color: '#fff', // 特效颜色\r\n                symbolSize: 3 // 特效大小\r\n              },\r\n              lineStyle: {\r\n                normal: { // 正常情况下的线条样式\r\n                  color: color[0],\r\n                  width: 0, // 因为是叠加效果，要是有宽度，线条会变粗，白色航线特效不明显\r\n                  curveness: -0.2 // 线条曲度\r\n                }\r\n              },\r\n              data: convertData(item) // 特效的起始、终点位置\r\n            }, { // 小飞机航线效果\r\n              type: 'lines',\r\n              zlevel: 2,\r\n              //symbol: ['none', 'arrow'], // 用于设置箭头\r\n              symbolSize: 10,\r\n              effect: {\r\n                show: true,\r\n                period: 6,\r\n                trailLength: 0,\r\n                symbol: planePath, // 特效形状，可以用其他svg pathdata路径代替\r\n                symbolSize: 15\r\n              },\r\n              lineStyle: {\r\n                normal: {\r\n                  color: color[0],\r\n                  width: 1,\r\n                  opacity: 0.6,\r\n                  curveness: -0.2\r\n                }\r\n              },\r\n              data: convertData(item), // 特效的起始、终点位置，一个二维数组，相当于coords: convertData(item[1])\r\n            }, { // 散点效果\r\n              type: 'effectScatter',\r\n              coordinateSystem: 'geo',\r\n              zlevel: 3,\r\n              rippleEffect: {\r\n                brushType: 'stroke'\r\n              },\r\n              label: {\r\n                normal: {\r\n                  show: true,\r\n                  position: 'left',\r\n                  formatter: '{b}'\r\n                }\r\n              },\r\n              itemStyle: {\r\n                normal: {\r\n                  color: color[1]\r\n                }\r\n              },\r\n              data: cityData(item)\r\n            }\r\n\r\n          );\r\n          series.push({\r\n            type: 'effectScatter',\r\n            coordinateSystem: 'geo',\r\n            zlevel: 3,\r\n            rippleEffect: {\r\n              brushType: 'stroke'\r\n            },\r\n            label: {\r\n              normal: {\r\n                show: true,\r\n                position: 'left',\r\n                formatter: '{b}'\r\n              }\r\n            },\r\n            itemStyle: {\r\n              normal: {\r\n                color: color[1]\r\n              }\r\n            },\r\n            data: scatterData(item)\r\n          })\r\n        });\r\n        const option = {\r\n          title: {\r\n            text: chartName,\r\n            left: 'center',\r\n            textStyle: {color: '#ffffff', fontSize: 12}\r\n          },\r\n          backgroundColor: '#404a59',\r\n          tooltip: {\r\n            trigger: 'item',\r\n            formatter: function (params) {\r\n              if (params.name){\r\n                return params.name\r\n              }else if(params.data.coord) {\r\n                return params.data.coord[2]\r\n              }\r\n            },\r\n            padding: 10,\r\n            backgroundColor: 'rgba(20,20,20,0.8)',\r\n          },\r\n          legend: {\r\n            orient: 'vertical',\r\n            left: 'left'\r\n          },\r\n          visualMap: {\r\n            min: chartMin,\r\n            max: chartMax,\r\n            calculable: true,\r\n            inRange: {\r\n              color: ['#50a3ba', '#eac736', '#d94e5d']\r\n            },\r\n            textStyle: {\r\n              color: '#fff'\r\n            }\r\n          },\r\n          geo: {\r\n            map: 'china',\r\n            roam:true,\r\n            label: {\r\n              emphasis: {\r\n                show: false\r\n              }\r\n            },\r\n            itemStyle: {\r\n              normal: {\r\n                areaColor: '#323c48',\r\n                borderColor: '#111'\r\n              },\r\n              emphasis: {\r\n                areaColor: '#2a333d'\r\n              }\r\n            },\r\n          },\r\n          series :series,\r\n        };\r\n        window.$.getJSON('public/plugins/echarts-grafana/data/china.json',function(Json){\r\n          echarts.registerMap('china', Json);\r\n          myChart.setOption(option);\r\n        });\r\n      }\r\n    }\r\n  }\r\n  function ChangeMap(cityId,name,chartType,chartMin,chartMax,chartName,chartSerilaName,flag,f) {\r\n    registerMap(cityId,name,chartMin,chartMax,chartName,chartSerilaName,flag,f);\r\n    $panelContainer.onmouseup=function(oEvent) {\r\n      if (!oEvent) oEvent = window.event;\r\n      if (oEvent.button === 2) {\r\n        setTimeout(function () {\r\n          count=count-1;\r\n          backMap(chartType,chartMin,chartMax,chartName,chartSerilaName);\r\n        }, 250);\r\n      }\r\n    };\r\n    myChart.off('click');\r\n    myChart.on(\"click\",function (parms) {\r\n      console.log(parms.name);\r\n      var cityID =CityMap[parms.name];\r\n      if(cityID){\r\n        count=count+1;\r\n        registerMap(cityID,parms.name,chartMin,chartMax,chartName,chartSerilaName,true,true);\r\n      }\r\n      // else if (count===0){\r\n      //   count=count+1;\r\n      //   changeNation(parms.name,chartType,chartMin,chartMax,chartName,chartSerilaName)\r\n      // }\r\n    });\r\n\r\n  }\r\n  function registerMap(cityId,name,chartMin,chartMax,chartName,chartSerilaName,flag,f) {\r\n    //let data=dataFormatter();\r\n    if (name ===\"world\"){\r\n      count=0;\r\n    }\r\n    if (name ===\"china\"){\r\n      count=1;\r\n    }\r\n    $.getJSON('public/plugins/echarts-grafana/data/'+cityId+'.json',function (Json) {\r\n      echarts.registerMap(name, Json);\r\n      //let data =datas(Json.features);\r\n      let list =location;\r\n      let data =dataFormatter(name,list,Json.features,cityId,name,flag,f);\r\n      const option = {\r\n        title: {\r\n          text: chartName,\r\n          left: 'center',\r\n          textStyle: {color: '#ffffff', fontSize: 12}\r\n        },\r\n        backgroundColor: '#404a59',\r\n        tooltip: {\r\n          trigger: 'item',\r\n          padding: 10,\r\n          formatter: function (params) {\r\n            let nation =null;\r\n            if(count===0){\r\n              for(let key in nameMap){\r\n                if(params.name===key){\r\n                  nation =nameMap[key]\r\n                }\r\n              }\r\n            }\r\n            if (nation&&params.value){\r\n              return nation + ' : ' + parseInt(params.value).toLocaleString();\r\n            }else if(nation){\r\n              return nation + ' : ';\r\n            }else if(params.value){\r\n              return params.name+':'+parseInt(params.value).toLocaleString();\r\n            }else {\r\n              return params.name+':'\r\n            }\r\n          },\r\n\r\n          backgroundColor: 'rgba(20,20,20,0.8)',\r\n        },\r\n        legend: {\r\n          orient: 'vertical',\r\n          left: 'left'\r\n        },\r\n        visualMap: {\r\n          min: chartMin,\r\n          max: chartMax,\r\n          calculable: true,\r\n          inRange: {\r\n            color: ['#50a3ba', '#eac736', '#d94e5d']\r\n          },\r\n          textStyle: {\r\n            color: '#fff'\r\n          }\r\n        },\r\n        series: [\r\n          {\r\n            name: chartSerilaName,\r\n            type: 'map',\r\n            mapType: name,\r\n            hoverable: true,\r\n            showLegendSymbol: false,\r\n            roam: true,\r\n            label: {\r\n              normal: {\r\n                show: false\r\n              },\r\n              emphasis: {\r\n                show: false\r\n              }\r\n            },\r\n            itemStyle: {\r\n              normal: {label: {show: true}, areaColor: '#edf2f1'},\r\n              emphasis: {label: {show: true}, areaColor: '#ffeb59'}\r\n            },\r\n            data: data\r\n          }\r\n        ]\r\n      };\r\n      setTimeout(function () {\r\n        myChart.setOption(option,true);\r\n      }, 250);\r\n    });\r\n\r\n  }\r\n  function backMap (chartType,chartMin,chartMax,chartName,chartSerilaName){\r\n    if (mapStack.length !== 0) {//如果有上级目录则执行\r\n      var map = mapStack.pop();\r\n      registerMap(map.mapId,map.mapName,chartMin,chartMax,chartName,chartSerilaName,false);\r\n      location=map.mapData;\r\n      parentId = map.mapId;\r\n      parentName = map.mapName;\r\n    }\r\n  }\r\n  function forJson(p,features) {\r\n    for(let i in features){\r\n      for(let j in features[i].geometry.coordinates){\r\n        if (count===2){\r\n          if(features[i].properties.cp&&Math.abs(features[i].properties.cp[0]-p[0])<0.1&&Math.abs(features[i].properties.cp[1]-p[1])<0.1){\r\n            return  features[i].properties.name\r\n          }else {\r\n            if (features[i].geometry.encodeOffsets !== undefined) {\r\n              if (features[i].geometry.type === \"MultiPolygon\") {\r\n                for (let k in features[i].geometry.coordinates[j]) {\r\n                  let decodeData = decodePolygon(features[i].geometry.coordinates[j][k], features[i].geometry.encodeOffsets)\r\n                  if (rayCasting(p, decodeData)) {\r\n                    return features[i].properties.name\r\n                  }\r\n                }\r\n              } else {\r\n                let decodeData = decodePolygon(features[i].geometry.coordinates[j], features[i].geometry.encodeOffsets)\r\n                if (rayCasting(p, decodeData)) {\r\n                  return features[i].properties.name\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n        if (features[i].geometry.type===\"MultiPolygon\") {\r\n          for (let k in features[i].geometry.coordinates[j]) {\r\n            if (count === 1&&features[i].geometry.encodeOffsets!==undefined) {\r\n              let decodeData = decodePolygon(features[i].geometry.coordinates[j][k], features[i].geometry.encodeOffsets[j]);\r\n              if (rayCasting(p, decodeData)) {\r\n                return features[i].properties.name\r\n              }\r\n            }\r\n            else if (rayCasting(p, features[i].geometry.coordinates[j][k])) {\r\n              return features[i].properties.name\r\n            }\r\n          }\r\n        } else {\r\n          if (count === 1&&features[i].geometry.encodeOffsets!==undefined) {\r\n            let decodeData = decodePolygon(features[i].geometry.coordinates[j], features[i].geometry.encodeOffsets);\r\n            if (rayCasting(p, decodeData)) {\r\n              return features[i].properties.name\r\n            }\r\n          } else {\r\n            if (rayCasting(p, features[i].geometry.coordinates[j])) {\r\n              return features[i].properties.name\r\n            }\r\n          }\r\n        }\r\n        }\r\n    }\r\n    return null\r\n  }\r\n  function decodePolygon(coordinate, encodeOffsets) {\r\n    var result = [];\r\n    var prevX = encodeOffsets[0][0];\r\n    var prevY = encodeOffsets[0][1];\r\n    for (var i = 0; i < coordinate.length; i += 2) {\r\n      var x = coordinate.charCodeAt(i) - 64;\r\n      var y = coordinate.charCodeAt(i + 1) - 64;\r\n      // ZigZag decoding\r\n      x = (x >> 1) ^ (-(x & 1));\r\n      y = (y >> 1) ^ (-(y & 1));\r\n      // Delta deocding\r\n      x += prevX;\r\n      y += prevY;\r\n\r\n      prevX = x;\r\n      prevY = y;\r\n      // Dequantize\r\n      result.push([x / 1024, y / 1024]);\r\n    }\r\n    return result;\r\n  }\r\n  function rayCasting(checkPoint, polygonPoints) {\r\n    var counter = 0;\r\n    var i;\r\n    var xinters;\r\n    var p1, p2;\r\n    var pointCount = polygonPoints.length;\r\n    p1 = polygonPoints[0];\r\n\r\n    for (i = 1; i <= pointCount; i++) {\r\n      p2 = polygonPoints[i % pointCount];\r\n      if (\r\n        checkPoint[0] > Math.min(p1[0], p2[0]) &&\r\n        checkPoint[0] <= Math.max(p1[0], p2[0])\r\n      ) {\r\n        if (checkPoint[1] <= Math.max(p1[1], p2[1])) {\r\n          if (p1[0] !== p2[0]) {\r\n            xinters =\r\n              (checkPoint[0] - p1[0]) *\r\n              (p2[1] - p1[1]) /\r\n              (p2[0] - p1[0]) +\r\n              p1[1];\r\n            if (p1[1] === p2[1] || checkPoint[1] <= xinters) {\r\n              counter++;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      p1 = p2;\r\n    }\r\n    if(counter % 2 === 0){\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n  ctrl.events.on('render', function () {\r\n    render();\r\n    ctrl.renderingCompleted();\r\n  });\r\n\r\n}\r\n"],"file":"rendering.js"}